// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, urlSearchParamsBodySerializer } from '@hey-api/client-axios';
import type { CreateUserUsersAdminCreatePostData, CreateUserUsersAdminCreatePostError, CreateUserUsersAdminCreatePostResponse, CreateUserStudentUsersStudentCreatePostData, CreateUserStudentUsersStudentCreatePostError, CreateUserStudentUsersStudentCreatePostResponse, AuthenticateUserAuthTokenPostData, AuthenticateUserAuthTokenPostError, AuthenticateUserAuthTokenPostResponse, RefreshAccessTokenAuthRefreshPostData, RefreshAccessTokenAuthRefreshPostError, RefreshAccessTokenAuthRefreshPostResponse, LogoutAuthLogoutPostError, LogoutAuthLogoutPostResponse, GetAdminsAdminAdminAllGetData, GetAdminsAdminAdminAllGetError, GetAdminsAdminAdminAllGetResponse, AdminDashboardAdminAdminDashboardGetData, AdminDashboardAdminAdminDashboardGetError, AdminDashboardAdminAdminDashboardGetResponse, CreateUserTrainerAdminTrainerCreatePostData, CreateUserTrainerAdminTrainerCreatePostError, CreateUserTrainerAdminTrainerCreatePostResponse, EndpointGetTrainersAdminTrainerGetAllGetData, EndpointGetTrainersAdminTrainerGetAllGetError, EndpointGetTrainersAdminTrainerGetAllGetResponse, EndpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatchData, EndpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatchError, EndpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatchResponse, EndpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDeleteData, EndpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDeleteError, EndpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDeleteResponse, EndpointTrainerToSportCenterAdminTrainerSportcenterJoinPostData, EndpointTrainerToSportCenterAdminTrainerSportcenterJoinPostError, EndpointTrainerToSportCenterAdminTrainerSportcenterJoinPostResponse, EndpointCreateSportCenterAdminSportCentersCreatePostData, EndpointCreateSportCenterAdminSportCentersCreatePostError, EndpointCreateSportCenterAdminSportCentersCreatePostResponse, EndpointGetSportCentersAdminSportCentersGetAllGetData, EndpointGetSportCentersAdminSportCentersGetAllGetError, EndpointGetSportCentersAdminSportCentersGetAllGetResponse, EndpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatchData, EndpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatchError, EndpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatchResponse, EndpointCreateDisciplineAdminDisciplineCreatePostData, EndpointCreateDisciplineAdminDisciplineCreatePostError, EndpointCreateDisciplineAdminDisciplineCreatePostResponse, EndpointGetDisciplinesAdminDisciplineGetAllGetData, EndpointGetDisciplinesAdminDisciplineGetAllGetError, EndpointGetDisciplinesAdminDisciplineGetAllGetResponse, EndpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatchData, EndpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatchError, EndpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatchResponse, EndpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDeleteData, EndpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDeleteError, EndpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDeleteResponse, EndpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePostData, EndpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePostError, EndpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePostResponse, EndpointGetDisciplinesAdminScheduleForDisciplineGetAllGetData, EndpointGetDisciplinesAdminScheduleForDisciplineGetAllGetError, EndpointGetDisciplinesAdminScheduleForDisciplineGetAllGetResponse, EndpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatchData, EndpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatchError, EndpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatchResponse, EndpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDeleteData, EndpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDeleteError, EndpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDeleteResponse, EndpointCreatePlanAdminPlanCreatePostData, EndpointCreatePlanAdminPlanCreatePostError, EndpointCreatePlanAdminPlanCreatePostResponse, EndpointGetPlansAdminPlanGetAllGetData, EndpointGetPlansAdminPlanGetAllGetError, EndpointGetPlansAdminPlanGetAllGetResponse, EndpointUpdatePlanAdminPlanUpdatePlanIdPatchData, EndpointUpdatePlanAdminPlanUpdatePlanIdPatchError, EndpointUpdatePlanAdminPlanUpdatePlanIdPatchResponse, EndpointDeletePlanAdminPlanDeletePlanIdDeleteData, EndpointDeletePlanAdminPlanDeletePlanIdDeleteError, EndpointDeletePlanAdminPlanDeletePlanIdDeleteResponse, EndpointCreateScheduleAdminScheduleCreatePostData, EndpointCreateScheduleAdminScheduleCreatePostError, EndpointCreateScheduleAdminScheduleCreatePostResponse, EndpointGetSchedulesAdminScheduleGetAllGetData, EndpointGetSchedulesAdminScheduleGetAllGetError, EndpointGetSchedulesAdminScheduleGetAllGetResponse, EndpointUpdateScheduleAdminScheduleUpdateScheduleIdPatchData, EndpointUpdateScheduleAdminScheduleUpdateScheduleIdPatchError, EndpointUpdateScheduleAdminScheduleUpdateScheduleIdPatchResponse, EndpointDeletePlanAdminScheduleDeleteScheduleIdDeleteData, EndpointDeletePlanAdminScheduleDeleteScheduleIdDeleteError, EndpointDeletePlanAdminScheduleDeleteScheduleIdDeleteResponse, EndpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPostData, EndpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPostError, EndpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPostResponse, EndpointGetStudentsAdminStudentsGetAllGetData, EndpointGetStudentsAdminStudentsGetAllGetError, EndpointGetStudentsAdminStudentsGetAllGetResponse, StudentPortalStudentStudentPortalGetData, StudentPortalStudentStudentPortalGetError, StudentPortalStudentStudentPortalGetResponse, TrainerDashboardTrainerTrainerDashboardGetData, TrainerDashboardTrainerTrainerDashboardGetError, TrainerDashboardTrainerTrainerDashboardGetResponse, RootGetError, RootGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Create User
 */
export const createUserUsersAdminCreatePost = <ThrowOnError extends boolean = false>(options: Options<CreateUserUsersAdminCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateUserUsersAdminCreatePostResponse, CreateUserUsersAdminCreatePostError, ThrowOnError>({
        ...options,
        url: '/users/admin_create'
    });
};

/**
 * Create User Student
 * weight and height field have max 6 characters ,plan_id must are null in the testing api
 */
export const createUserStudentUsersStudentCreatePost = <ThrowOnError extends boolean = false>(options: Options<CreateUserStudentUsersStudentCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateUserStudentUsersStudentCreatePostResponse, CreateUserStudentUsersStudentCreatePostError, ThrowOnError>({
        ...options,
        url: '/users/student_create'
    });
};

/**
 * Authenticate User
 */
export const authenticateUserAuthTokenPost = <ThrowOnError extends boolean = false>(options: Options<AuthenticateUserAuthTokenPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<AuthenticateUserAuthTokenPostResponse, AuthenticateUserAuthTokenPostError, ThrowOnError>({
        ...options,
        ...urlSearchParamsBodySerializer,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options?.headers
        },
        url: '/auth/token'
    });
};

/**
 * Refresh Access Token
 */
export const refreshAccessTokenAuthRefreshPost = <ThrowOnError extends boolean = false>(options: Options<RefreshAccessTokenAuthRefreshPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<RefreshAccessTokenAuthRefreshPostResponse, RefreshAccessTokenAuthRefreshPostError, ThrowOnError>({
        ...options,
        url: '/auth/refresh'
    });
};

/**
 * Logout
 */
export const logoutAuthLogoutPost = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<LogoutAuthLogoutPostResponse, LogoutAuthLogoutPostError, ThrowOnError>({
        ...options,
        url: '/auth/logout'
    });
};

/**
 * Get Admins
 */
export const getAdminsAdminAdminAllGet = <ThrowOnError extends boolean = false>(options?: Options<GetAdminsAdminAdminAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAdminsAdminAdminAllGetResponse, GetAdminsAdminAdminAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/admin-all'
    });
};

/**
 * Admin Dashboard
 */
export const adminDashboardAdminAdminDashboardGet = <ThrowOnError extends boolean = false>(options?: Options<AdminDashboardAdminAdminDashboardGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<AdminDashboardAdminAdminDashboardGetResponse, AdminDashboardAdminAdminDashboardGetError, ThrowOnError>({
        ...options,
        url: '/admin/admin-dashboard'
    });
};

/**
 * Create User Trainer
 */
export const createUserTrainerAdminTrainerCreatePost = <ThrowOnError extends boolean = false>(options: Options<CreateUserTrainerAdminTrainerCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateUserTrainerAdminTrainerCreatePostResponse, CreateUserTrainerAdminTrainerCreatePostError, ThrowOnError>({
        ...options,
        url: '/admin/trainer/create'
    });
};

/**
 * Endpoint Get Trainers
 */
export const endpointGetTrainersAdminTrainerGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetTrainersAdminTrainerGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetTrainersAdminTrainerGetAllGetResponse, EndpointGetTrainersAdminTrainerGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/trainer/get-all'
    });
};

/**
 * Endpoint Update Sport Center
 */
export const endpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatch = <ThrowOnError extends boolean = false>(options: Options<EndpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatchResponse, EndpointUpdateSportCenterAdminTrainerUpdateTrainerIdPatchError, ThrowOnError>({
        ...options,
        url: '/admin/trainer/update/{trainer_id}'
    });
};

/**
 * Endpoint Delete Disciplines
 */
export const endpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDelete = <ThrowOnError extends boolean = false>(options: Options<EndpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<EndpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDeleteResponse, EndpointDeleteDisciplinesAdminTrainerDeleteTrainerIdDeleteError, ThrowOnError>({
        ...options,
        url: '/admin/trainer/delete/{trainer_id}'
    });
};

/**
 * Endpoint Trainer To Sport Center
 */
export const endpointTrainerToSportCenterAdminTrainerSportcenterJoinPost = <ThrowOnError extends boolean = false>(options: Options<EndpointTrainerToSportCenterAdminTrainerSportcenterJoinPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointTrainerToSportCenterAdminTrainerSportcenterJoinPostResponse, EndpointTrainerToSportCenterAdminTrainerSportcenterJoinPostError, ThrowOnError>({
        ...options,
        url: '/admin/trainer_sportcenter/join'
    });
};

/**
 * Endpoint Create Sport Center
 * in city_id and comuna_id you can use 1 and 1 for make testing
 */
export const endpointCreateSportCenterAdminSportCentersCreatePost = <ThrowOnError extends boolean = false>(options: Options<EndpointCreateSportCenterAdminSportCentersCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointCreateSportCenterAdminSportCentersCreatePostResponse, EndpointCreateSportCenterAdminSportCentersCreatePostError, ThrowOnError>({
        ...options,
        url: '/admin/sport-centers/create'
    });
};

/**
 * Endpoint Get Sport Centers
 */
export const endpointGetSportCentersAdminSportCentersGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetSportCentersAdminSportCentersGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetSportCentersAdminSportCentersGetAllGetResponse, EndpointGetSportCentersAdminSportCentersGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/sport-centers/get-all'
    });
};

/**
 * Endpoint Update Sport Center
 */
export const endpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatch = <ThrowOnError extends boolean = false>(options: Options<EndpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatchResponse, EndpointUpdateSportCenterAdminSportCentersUpdateSportCenterIdPatchError, ThrowOnError>({
        ...options,
        url: '/admin/sport-centers/update/{sport_center_id}'
    });
};

/**
 * Endpoint Create Discipline
 */
export const endpointCreateDisciplineAdminDisciplineCreatePost = <ThrowOnError extends boolean = false>(options: Options<EndpointCreateDisciplineAdminDisciplineCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointCreateDisciplineAdminDisciplineCreatePostResponse, EndpointCreateDisciplineAdminDisciplineCreatePostError, ThrowOnError>({
        ...options,
        url: '/admin/discipline/create'
    });
};

/**
 * Endpoint Get Disciplines
 */
export const endpointGetDisciplinesAdminDisciplineGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetDisciplinesAdminDisciplineGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetDisciplinesAdminDisciplineGetAllGetResponse, EndpointGetDisciplinesAdminDisciplineGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/discipline/get-all'
    });
};

/**
 * Endpoint Update Discipline
 */
export const endpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatch = <ThrowOnError extends boolean = false>(options: Options<EndpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatchResponse, EndpointUpdateDisciplineAdminDisciplineUpdateDisciplineIdPatchError, ThrowOnError>({
        ...options,
        url: '/admin/discipline/update/{discipline_id}'
    });
};

/**
 * Endpoint Delete Disciplines
 */
export const endpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDelete = <ThrowOnError extends boolean = false>(options: Options<EndpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<EndpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDeleteResponse, EndpointDeleteDisciplinesAdminDisciplineDeleteDisciplineIdDeleteError, ThrowOnError>({
        ...options,
        url: '/admin/discipline/delete/{discipline_id}'
    });
};

/**
 * Endpoint Create Schedule For Discipline
 */
export const endpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePost = <ThrowOnError extends boolean = false>(options: Options<EndpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePostResponse, EndpointCreateScheduleForDisciplineAdminScheduleForDisciplineCreatePostError, ThrowOnError>({
        ...options,
        url: '/admin/schedule-for-discipline/create'
    });
};

/**
 * Endpoint Get Disciplines
 */
export const endpointGetDisciplinesAdminScheduleForDisciplineGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetDisciplinesAdminScheduleForDisciplineGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetDisciplinesAdminScheduleForDisciplineGetAllGetResponse, EndpointGetDisciplinesAdminScheduleForDisciplineGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/schedule-for-discipline/get-all'
    });
};

/**
 * Endpoint Update Schedule For Discipline
 */
export const endpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatch = <ThrowOnError extends boolean = false>(options: Options<EndpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatchResponse, EndpointUpdateScheduleForDisciplineAdminScheduleForDisciplineUpdateScheduleForDisciplineIdPatchError, ThrowOnError>({
        ...options,
        url: '/admin/schedule-for-discipline/update/{schedule_for_discipline_id}'
    });
};

/**
 * Endpoint Delete Schedule For Discipline
 */
export const endpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDelete = <ThrowOnError extends boolean = false>(options: Options<EndpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<EndpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDeleteResponse, EndpointDeleteScheduleForDisciplineAdminScheduleForDisciplineDeleteScheduleForDisciplineIdDeleteError, ThrowOnError>({
        ...options,
        url: '/admin/schedule-for-discipline/delete/{schedule_for_discipline_id}'
    });
};

/**
 * Endpoint Create Plan
 */
export const endpointCreatePlanAdminPlanCreatePost = <ThrowOnError extends boolean = false>(options: Options<EndpointCreatePlanAdminPlanCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointCreatePlanAdminPlanCreatePostResponse, EndpointCreatePlanAdminPlanCreatePostError, ThrowOnError>({
        ...options,
        url: '/admin/plan/create'
    });
};

/**
 * Endpoint Get Plans
 */
export const endpointGetPlansAdminPlanGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetPlansAdminPlanGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetPlansAdminPlanGetAllGetResponse, EndpointGetPlansAdminPlanGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/plan/get-all'
    });
};

/**
 * Endpoint Update Plan
 */
export const endpointUpdatePlanAdminPlanUpdatePlanIdPatch = <ThrowOnError extends boolean = false>(options: Options<EndpointUpdatePlanAdminPlanUpdatePlanIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndpointUpdatePlanAdminPlanUpdatePlanIdPatchResponse, EndpointUpdatePlanAdminPlanUpdatePlanIdPatchError, ThrowOnError>({
        ...options,
        url: '/admin/plan/update/{plan_id}'
    });
};

/**
 * Endpoint Delete Plan
 */
export const endpointDeletePlanAdminPlanDeletePlanIdDelete = <ThrowOnError extends boolean = false>(options: Options<EndpointDeletePlanAdminPlanDeletePlanIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<EndpointDeletePlanAdminPlanDeletePlanIdDeleteResponse, EndpointDeletePlanAdminPlanDeletePlanIdDeleteError, ThrowOnError>({
        ...options,
        url: '/admin/plan/delete/{plan_id}'
    });
};

/**
 * Endpoint Create Schedule
 */
export const endpointCreateScheduleAdminScheduleCreatePost = <ThrowOnError extends boolean = false>(options: Options<EndpointCreateScheduleAdminScheduleCreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointCreateScheduleAdminScheduleCreatePostResponse, EndpointCreateScheduleAdminScheduleCreatePostError, ThrowOnError>({
        ...options,
        url: '/admin/schedule/create'
    });
};

/**
 * Endpoint Get Schedules
 */
export const endpointGetSchedulesAdminScheduleGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetSchedulesAdminScheduleGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetSchedulesAdminScheduleGetAllGetResponse, EndpointGetSchedulesAdminScheduleGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/schedule/get-all'
    });
};

/**
 * Endpoint Update Schedule
 */
export const endpointUpdateScheduleAdminScheduleUpdateScheduleIdPatch = <ThrowOnError extends boolean = false>(options: Options<EndpointUpdateScheduleAdminScheduleUpdateScheduleIdPatchData, ThrowOnError>) => {
    return (options?.client ?? client).patch<EndpointUpdateScheduleAdminScheduleUpdateScheduleIdPatchResponse, EndpointUpdateScheduleAdminScheduleUpdateScheduleIdPatchError, ThrowOnError>({
        ...options,
        url: '/admin/schedule/update/{schedule_id}'
    });
};

/**
 * Endpoint Delete Plan
 */
export const endpointDeletePlanAdminScheduleDeleteScheduleIdDelete = <ThrowOnError extends boolean = false>(options: Options<EndpointDeletePlanAdminScheduleDeleteScheduleIdDeleteData, ThrowOnError>) => {
    return (options?.client ?? client).delete<EndpointDeletePlanAdminScheduleDeleteScheduleIdDeleteResponse, EndpointDeletePlanAdminScheduleDeleteScheduleIdDeleteError, ThrowOnError>({
        ...options,
        url: '/admin/schedule/delete/{schedule_id}'
    });
};

/**
 * Endpoint Student To Sportcenter Subscription
 */
export const endpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPost = <ThrowOnError extends boolean = false>(options: Options<EndpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPostData, ThrowOnError>) => {
    return (options?.client ?? client).post<EndpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPostResponse, EndpointStudentToSportcenterSubscriptionAdminStudentSportcenterJoinPostError, ThrowOnError>({
        ...options,
        url: '/admin/student_sportcenter/join'
    });
};

/**
 * Endpoint Get Students
 */
export const endpointGetStudentsAdminStudentsGetAllGet = <ThrowOnError extends boolean = false>(options?: Options<EndpointGetStudentsAdminStudentsGetAllGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<EndpointGetStudentsAdminStudentsGetAllGetResponse, EndpointGetStudentsAdminStudentsGetAllGetError, ThrowOnError>({
        ...options,
        url: '/admin/students/get-all'
    });
};

/**
 * Student Portal
 */
export const studentPortalStudentStudentPortalGet = <ThrowOnError extends boolean = false>(options?: Options<StudentPortalStudentStudentPortalGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<StudentPortalStudentStudentPortalGetResponse, StudentPortalStudentStudentPortalGetError, ThrowOnError>({
        ...options,
        url: '/student/student-portal'
    });
};

/**
 * Trainer Dashboard
 */
export const trainerDashboardTrainerTrainerDashboardGet = <ThrowOnError extends boolean = false>(options?: Options<TrainerDashboardTrainerTrainerDashboardGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<TrainerDashboardTrainerTrainerDashboardGetResponse, TrainerDashboardTrainerTrainerDashboardGetError, ThrowOnError>({
        ...options,
        url: '/trainer/trainer-dashboard'
    });
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};